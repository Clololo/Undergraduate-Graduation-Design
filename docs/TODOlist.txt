3.10 17:00  目前lambda数组填充数值为nan, 是pop填充到rho和lambda时出了问题  --已解决
3.11 13:30  todo: 速度设置成1/节点数 度为0/1的节点不存在  --已解决
3.11 17:00  todo: 考虑如何找到合适的码率   -- 采用theta 
3.12 12:00  todo: 验证码率计算方式的正确性   --  已完成
3.12 13:30  todo: vn_deg_len = 0  -- 已解决
3.12 17:00  由于lambda1可能为0的bug, 取消theta方式, 重新使用直接归一化的方法
3.12 17:30  码率问题初步解决，snr_threshold的计算似乎仍然存在问题
3.13 13:30  PSO成功运行，问题：似乎由于校验节点和变量节点的数值固定，码率必须固定
3.13 17:30  码率由公式决定（还是需要知道公式对不对），dim可以不决定码率,
3.13 18:00  需要明确：到底研究中要不要提前预设好码率？
3.14 12:00  度分布明确了变量节点和校验节点的度分布，但目前的PEG算法只接受变量节点的度分布，需要修改
            解决方案1：记录校验节点的度数：
                      在算法中维护一个数组（如 checkNodeDegrees），用于记录每个校验节点的当前度数。
                      在每次添加边时，更新校验节点的度数。
                      校验节点选择约束：
                      选择校验节点时，优先选择当前度数未达到目标度数的校验节点。
                      如果多个校验节点满足条件，选择度数最低的校验节点。
                      校验节点度分布检查：
                      在算法结束时，检查校验节点的度数是否满足目标分布。
3.17 9:00   文章Optimal_Design_of_Cascade_LDPC-CPM_System_Based_on_Bionic_Swarm_Optimization_Algorithm
            中的PEG是修改过的PEG,需要相应地修改PEG代码细节  --已解决
3.17 13:30  修改PEG代码，使其能够适应确定的校验节点度分布，方法是不选择校验节点度最小的那个（传统PEG的选择），
            而是选择使 CN 的度分布最接近最优分布的那个（该方法同样来源上文）
3.17 16:00  todo: 搜索得到节点个数为小数点时，无法达成一个合理的校验矩阵





进展：
PEG f
GA  f  
优化度分布的PSO f
与GA结合 f 
与PEG结合 
Min-sum译码算法  f
结合PSO优化的min-sum译码算法  

